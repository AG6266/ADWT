Slip 16
Q1)
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Contact Form</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f8f9fa;
    }
    .contact-box {
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.1);
      overflow: hidden;
      max-width: 800px;
      margin: 60px auto;
    }
    .contact-left {
      background-color: #f39c12;
      color: white;
      padding: 40px 30px;
    }
    .contact-left h3 {
      margin-top: 20px;
      font-weight: bold;
    }
    .contact-right {
      padding: 40px 30px;
    }
    .btn-submit {
      background-color: #1b1b4b;
      color: white;
    }
    .btn-submit:hover {
      background-color: #0e0e2b;
    }
  </style>
</head>
<body>

  <div class="contact-box d-flex flex-column flex-md-row">
    <!-- Left Section -->
    <div class="contact-left d-flex flex-column justify-content-center align-items-center text-center">
      <i class="bi bi-envelope-fill" style="font-size: 40px;"></i>
      <h3>Contact Us</h3>
      <p>We would love to hear from you!</p>
    </div>

    <!-- Right Section -->
    <div class="contact-right flex-grow-1">
      <form>
        <div class="mb-3">
          <label for="firstName" class="form-label">First Name:</label>
          <input type="text" class="form-control" id="firstName" placeholder="Enter First Name">
        </div>
        <div class="mb-3">
          <label for="lastName" class="form-label">Last Name:</label>
          <input type="text" class="form-control" id="lastName" placeholder="Enter Last Name">
        </div>
        <div class="mb-3">
          <label for="email" class="form-label">Email:</label>
          <input type="email" class="form-control" id="email" placeholder="Enter email">
        </div>
        <div class="mb-3">
          <label for="comment" class="form-label">Comment:</label>
          <textarea class="form-control" id="comment" rows="4" placeholder="Write your message here..."></textarea>
        </div>
        <button type="submit" class="btn btn-submit">Submit</button>
      </form>
    </div>
  </div>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <!-- Bootstrap Icons -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
</body>
</html>

Q2)
// Create Customers
CREATE (:Customer {name: “John Doe”});
CREATE (:Customer {name: “Samantha”});
// Create Orders
CREATE (:Order {orderDate: “1/1/2023”});
// Create Restaurants
CREATE (:Restaurant {name: “Restaurant1”, area: “Area1”, rating: 4.5});
CREATE (:Restaurant {name: “Restaurant2”, area: “Area2”, rating: 3.8});
// Connect Restaurants to Industries
MATCH (r:Restaurant), (i:Industry {name: “ZOMATO”})
CREATE (r)-[:CONNECTED_TO]->(i);
MATCH (r:Restaurant), (i:Industry {name: “Swiggy”})
CREATE (r)-[:CONNECTED_TO]->(i);
// Create Offers
CREATE (:Offer {discount: 10});
// Connect Customers to Orders, Restaurants, Offers
MATCH (c:Customer {name: “John Doe”}), (o:Order), (r:Restaurant {name: “Restaurant1”}), (of:Offer)
CREATE (c)-[:PLACED_ORDER]->(o)-[:ORDERED_FROM]->(r);
CREATE (c)-[:GETS_OFFER]->(of);
// Create Ratings
CREATE (:Rating {stars: 4});
// Connect Customers to Ratings
MATCH (c:Customer {name: “John Doe”}), (r:Restaurant {name: “Restaurant1”}), (ra:Rating)
CREATE (c)-[:GIVES_RATING]->(ra);
CREATE (ra)-[:FOR]->(r);
// Create Recommendations
MATCH (c1:Customer {name: “John Doe”}), (c2:Customer {name: “Samantha”})
CREATE (c1)-[:RECOMMENDS_TO]->(c2);
a. Count the number of customers who placed an order on “1/1/2023”:
MATCH (c:Customer)-[:PLACED_ORDER]->(o:Order {orderDate: “1/1/2023”})
RETURN COUNT(DISTINCT c) AS numberOfCustomers;
b. List the names of customers whose name starts with “S” and place orders using Swiggy:
MATCH (c:Customer)-[:PLACED_ORDER]->(o:Order)-[:ORDERED_FROM]->(:Restaurant)-[:CONNECTED_TO]->(:Industry {name: “Swiggy”})
WHERE c.name STARTS WITH “S”
RETURN DISTINCT c.name;
c. List the names of hotels with a high rating (>=4):
MATCH (r:Restaurant)
WHERE r.rating >= 4
RETURN r.name;
d. List the most recommended hotels in an area (replace “AreaX” with the specific area):
MATCH (c:Customer)-[:RECOMMENDS_TO]->(:Customer)-[:PLACED_ORDER]->(:Order)-[:ORDERED_FROM]->(r:Restaurant {area: “AreaX”})
RETURN r.name, COUNT(DISTINCT c) AS recommendations
ORDER BY recommendations DESC
LIMIT 1;
