Slip 8
Q1)
<!DOCTYPE html>
<html lang=”en”>
<head>
<meta charset=”UTF-8”>
<meta name=”viewport” content=”width=device-width, initial-scale=1.0”>
<title>Bootstrap Button Styles</title>
<!—Bootstrap CSS →
<link href=”path/to/bootstrap.min.css” rel=”stylesheet”>
</head>
<body>
<div class=”container mt-5”>
<!—Container with margin-top (mt-5) →
<h2 class=”mb-4”>Bootstrap Button Styles</h2>
<!—Button Styles →
<button type=”button” class=”btn btn-secondary mr-2”>Secondary</button>
<button type=”button” class=”btn btn-primary mr-2”>Primary</button>
<button type=”button” class=”btn btn-success mr-2”>Success</button>
<button type=”button” class=”btn btn-danger mr-2”>Danger</button>
<button type=”button” class=”btn btn-info mr-2”>Info</button>
<button type=”button” class=”btn btn-warning mr-2”>Warning</button>
<button type=”button” class=”btn btn-error”>Error</button>
<!—End of Button Styles →
</div>
<!—End of Container →
<!—Bootstrap JS (Optional, for certain components) →
<script src=”path/to/bootstrap.bundle.min.js”></script>
</body>
</html>


Q2)
db.createCollection("warehouses");
db.warehouses.insertMany([
  { _id: 1, name: "Central Warehouse", location: "Pune" },
  { _id: 2, name: "East Warehouse", location: "Mumbai" },
  { _id: 3, name: "West Warehouse", location: "Nashik" },
  { _id: 4, name: "North Warehouse", location: "Nagpur" },
  { _id: 5, name: "South Warehouse", location: "Aurangabad" }
]);

db.createCollection("stock");
db.stock.insertMany([
  { _id: 101, item_id: 1, warehouse_id: 1, quantity: 500 },
  { _id: 102, item_id: 2, warehouse_id: 2, quantity: 15 },
  { _id: 103, item_id: 3, warehouse_id: 3, quantity: 45 },
  { _id: 104, item_id: 4, warehouse_id: 4, quantity: 350 },
  { _id: 105, item_id: 5, warehouse_id: 5, quantity: 100 }
]);



a. List all the items where quantity is greater than 300:
db.stock.aggregate([
  { $match: { quantity: { $gt: 300 } } },
  {
    $lookup: {
      from: "items",
      localField: "item_id",
      foreignField: "_id",
      as: "item"
    }
  },
  { $unwind: "$item" },
  { $project: { _id: 0, "item.name": 1, quantity: 1 } }
]);


b. List all items which have tags less than 5:
db.items.find(
  { $expr: { $lt: [ { $size: "$tags" }, 5 ] } },
  { _id: 0, name: 1, tags: 1 }
);



c. List all items having status equal to “B” or having quantity less than 50 and height of the product should be greater than 8:
db.items.find({
  $or: [
    { status: "B" },
    { $and: [ { height: { $gt: 8 } }, { _id: { $in: db.stock.find({ quantity: { $lt: 50 } }).map(s => s.item_id) } } ] }
  ]
});

d. Find all warehouses that keep the item “Planner” and have in-stock quantity less than 20:
var planner = db.items.findOne({ name: "Planner" });

db.stock.aggregate([
  { $match: { item_id: planner._id, quantity: { $lt: 20 } } },
  {
    $lookup: {
      from: "warehouses",
      localField: "warehouse_id",
      foreignField: "_id",
      as: "warehouse"
    }
  },
  { $unwind: "$warehouse" },
  { $project: { _id: 0, "warehouse.name": 1, quantity: 1 } }
]);
